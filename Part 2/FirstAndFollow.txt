FIRST :
_______
Program : {begin}
Code : {Epsilon,FIRST(InstList)}
InstList : {FIRST(Instruction)}
NextInst : {Epsilon,;}
Instruction :{FIRST(Assign,If,While,For,Print,Read)}
Assign : {VarName}
ExprArith : {FIRST(Term)}
ExprArith2 : {Epsilon, FIRST(TermOp)}
Term : {FIRST(Factor)}
Term2 : {Epsilon, FIRST(FACTOR)}
Factor : {(, -, VarName, Number}
TermOp : {+, -}
FactorOp : {*, /}
If : {if}
EndIf : {fi, else}
Cond : {FIRST(AndCond)}
Cond2 : {Epsilon, or}
AndCond : {FIRST(CondTerm)}
AndCond2 : {Epsilon, and}
CondTerm : {not, FIRST(SimpleCond)}
SimpleCond : {FIRST(ExprArith)}
Comp : {=, >=, >, <=, <, /=}
While : {while}
For : {for}
Print : {print}
Read : {read}


Follow:
______
Program : {$}
Code : {end, FIRST(EndIf), fi, od}
InstList : {FOLLOW(Code)}
NextInst : {FOLLOW(InstList)}
Instruction : {FIRST(NextInst)}
Assign : {FOLLOW(Instruction)}
ExprArith : {), by, to, do, FOLLOW(Assign,Factor, SimpleCond), FIRST(Comp)}
ExprArith2 : {FOLLOW(ExprArith)}
Term : {FIRST(ExprArith2)}
Term2 : {FOLLOW(Term)}
Factor : {FIRST(Term2)}
TermOp : {FIRST(ExprArith2)}
FactorOp : {FIRST(Term2)}
If : {FOLLOW(Instruction)}
EndIf : {FOLLOW(If)}
Cond : {then, do}
Cond2 : {FOLLOW(Cond)}
AndCond : {FIRST(Cond2)}
AndCond2 : {FOLLOW(AndCond)}
CondTerm : {FIRST(AndCond2)}
SimpleCond : {FOLLOW(CondTerm)}
Comp : {FIRST(ExprArith)}
While : {FOLLOW(Instruction)}
For : {FOLLOW(Instruction)}
Print : {FOLLOW(Instruction)}
Read : {FOLLOW(Instruction)}